plugins {
    id 'com.android.application'
}
android {
    namespace 'ru.alexandrkozlovskiy.test'
    signingConfigs {
        release {
        }
    }
    compileSdkVersion 34
    buildToolsVersion "34.0.0"
    defaultConfig {
        applicationId "ru.alexandrkozlovskiy.test"
        minSdkVersion 16
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        signingConfig signingConfigs.debug
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            def f = file("../keystore.properties")
            if (f.exists()) {
                def props = new Properties()
                f.withInputStream { props.load(it) }
                signingConfigs.release.storeFile file(props.RELEASE_KEY_PATH)
                signingConfigs.release.storePassword props.RELEASE_STORE_PASSWORD
                signingConfigs.release.keyAlias props.RELEASE_KEY_ALIAS
                signingConfigs.release.keyPassword props.RELEASE_KEY_PASSWORD
            } else {
                def writer = new FileWriter(f.path)
                writer.write("RELEASE_KEY_PATH=\n")
                writer.write("RELEASE_KEY_PASSWORD=\n")
                writer.write("RELEASE_KEY_ALIAS=\n")
                writer.write("RELEASE_STORE_PASSWORD=")
                writer.close()
                throw new IOException("File $f.name was created. please fill it by values of your release key.")
            }
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
}